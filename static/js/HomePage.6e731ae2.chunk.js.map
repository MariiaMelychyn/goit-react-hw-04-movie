{"version":3,"sources":["services/moviesApi.js","components/HomePage/HomePage.module.css","components/HomePage/HomePage.jsx"],"names":["axios","defaults","baseURL","params","api_key","language","fetchTrendingMovies","a","config","url","data","results","Error","movie_id","cast","query","api","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","fetchMoviesByQuery","module","exports","HomePage","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","moviesApi","then","response","className","s","filmsList","map","poster_path","title","id","filmsListItem","to","pathname","state","from","src","alt"],"mappings":"uLAKAA,IAAMC,SAASC,QAHE,gCAIjBF,IAAMC,SAASE,OAAS,CACtBC,QAJc,mCAKdC,SAAU,SAGZ,IAAMC,EAAmB,uCAAG,gCAAAC,EAAA,sEAElBC,EAAS,CACbC,IAAI,uBAHkB,SAMDT,IAAMQ,GANL,uBAMhBE,EANgB,EAMhBA,KANgB,kBAOjBA,EAAKC,SAPY,gCASxB,IAAIC,MAAM,2BATc,yDAAH,qD,4CAazB,WAAiCC,GAAjC,mBAAAN,EAAA,sEAEUC,EAAS,CACbC,IAAI,SAAD,OAAWI,IAHpB,SAM2Bb,IAAMQ,EAAQK,GANzC,uBAMYH,EANZ,EAMYA,KANZ,kBAOWA,GAPX,gCASI,IAAIE,MAAM,2BATd,0D,kEAaA,WAA8BC,GAA9B,mBAAAN,EAAA,sEAEUC,EAAS,CACbC,IAAI,SAAD,OAAWI,EAAX,aAHT,SAM2Bb,IAAMQ,EAAQK,GANzC,uBAMYH,EANZ,EAMYA,KANZ,kBAOWA,EAAKI,MAPhB,gCASI,IAAIF,MAAM,2BATd,0D,kEAaA,WAAiCC,GAAjC,mBAAAN,EAAA,sEAEUC,EAAS,CACbC,IAAI,SAAD,OAAWI,EAAX,aAHT,SAM2Bb,IAAMQ,EAAQK,GANzC,uBAMYH,EANZ,EAMYA,KANZ,kBAOWA,EAAKC,SAPhB,gCASI,IAAIC,MAAM,2BATd,0D,kEAaA,WAAkCG,GAAlC,mBAAAR,EAAA,sEAEUC,EAAS,CACbC,IAAI,eACJN,OAAQ,CACNY,UALR,SAS2Bf,IAAMQ,GATjC,uBASYE,EATZ,EASYA,KATZ,kBAUWA,EAAKC,SAVhB,gCAYI,IAAIC,MAAM,2BAZd,0D,sBAgBA,IAAMI,EAAM,CACVV,sBACAW,kB,4CACAC,e,4CACAC,kB,4CACAC,mB,6CAGaJ,O,mBCtFfK,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,UAAY,4BAA4B,cAAgB,kC,gJCI3F,SAASC,IACtB,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEMC,EAAWC,cAWjB,OATAC,qBAAU,WAENC,IACGxB,sBACAyB,MAAK,SAAAC,GAAQ,OAAIN,EAAkBM,QAGvC,IAGD,mCAGE,oBAAIC,UAAWC,IAAEC,UAAjB,SACGV,EAAeW,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,GAAvB,OAClB,oBAAaN,UAAWC,IAAEM,cAA1B,SACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaH,GACrBI,MAAO,CACLC,KAAMjB,EAASe,WAJrB,UAQE,qBAAKG,IAAG,UA3BD,mCA2BC,OAAkBR,GAAeS,IAAI,KAC7C,oBAAIb,UAAWC,IAAEI,MAAjB,SAAyBA,QAVpBC","file":"static/js/HomePage.6e731ae2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '3b0a0f3678b03bfe7113d836939cb420';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: 'en-US',\r\n};\r\n\r\nconst fetchTrendingMovies = async () => {\r\n  try {\r\n    const config = {\r\n      url: `trending/movie/week`,\r\n    };\r\n\r\n    const { data } = await axios(config);\r\n    return data.results;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n};\r\n\r\nasync function fetchMovieDetails(movie_id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${movie_id}`,\r\n    };\r\n\r\n    const { data } = await axios(config, movie_id);\r\n    return data;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nasync function fetchMovieCast(movie_id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${movie_id}/credits`,\r\n    };\r\n\r\n    const { data } = await axios(config, movie_id);\r\n    return data.cast;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nasync function fetchMovieReviews(movie_id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${movie_id}/reviews`,\r\n    };\r\n\r\n    const { data } = await axios(config, movie_id);\r\n    return data.results;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nasync function fetchMoviesByQuery(query) {\r\n  try {\r\n    const config = {\r\n      url: `search/movie`,\r\n      params: {\r\n        query,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios(config);\r\n    return data.results;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nconst api = {\r\n  fetchTrendingMovies,\r\n  fetchMovieDetails,\r\n  fetchMovieCast,\r\n  fetchMovieReviews,\r\n  fetchMoviesByQuery,\r\n};\r\n\r\nexport default api;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__34eD4\",\"filmsList\":\"HomePage_filmsList__60Jdl\",\"filmsListItem\":\"HomePage_filmsListItem__3lFTg\"};","import { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport moviesApi from '../../services/moviesApi';\r\nimport s from './HomePage.module.css';\r\n\r\nexport default function HomePage() {\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  const srcBaseUrl = 'https://image.tmdb.org/t/p/w500';\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const renderTrendingMovies = () => {\r\n      moviesApi\r\n        .fetchTrendingMovies()\r\n        .then(response => setTrendingMovies(response));\r\n    };\r\n    renderTrendingMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    \r\n      \r\n      <ul className={s.filmsList}>\r\n        {trendingMovies.map(({ poster_path, title, id }) => (\r\n          <li key={id} className={s.filmsListItem}>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${id}`,\r\n                state: {\r\n                  from: location.pathname,\r\n                },\r\n              }}\r\n            >\r\n              <img src={`${srcBaseUrl}${poster_path}`} alt=\"\" />\r\n              <h3 className={s.title}>{title}</h3>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}"],"sourceRoot":""}