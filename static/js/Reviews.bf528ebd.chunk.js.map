{"version":3,"sources":["components/Reviews/Reviews.jsx"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","moviesApi","fetchMovieReviews","then","console","log","length","map","id","author","content"],"mappings":"iOAIe,SAASA,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WAENC,IAAUC,kBAAkBP,GAASQ,KAAKJ,KAG3C,CAACJ,IACJS,QAAQC,IAAIP,GAGV,mCACGA,GAAWA,EAAQQ,OAAS,EAC3B,6BACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,+BACE,6BAAKD,IACL,+BAAOC,MAFAF,QAOb","file":"static/js/Reviews.bf528ebd.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport moviesApi from '../../services/moviesApi';\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const renderMovieReviews = () => {\r\n      moviesApi.fetchMovieReviews(movieId).then(setReviews);\r\n    };\r\n    renderMovieReviews();\r\n  }, [movieId]);\r\n  console.log(reviews);\r\n\r\n  return (\r\n    <>\r\n      {reviews && reviews.length > 0 ? (\r\n        <ul>\r\n          {reviews.map(({ id, author, content }) => (\r\n            <li key={id}>\r\n              <h2>{author}</h2>\r\n              <span>{content}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <span>We don't have reviews for this movie.</span>\r\n      )}\r\n    </>\r\n  );\r\n}"],"sourceRoot":""}